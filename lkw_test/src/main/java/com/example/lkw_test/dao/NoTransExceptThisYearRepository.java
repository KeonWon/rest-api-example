package com.example.lkw_test.dao;

import java.util.List;

import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.data.jpa.repository.Query;

import com.example.lkw_test.dto.NoTransExceptThisYear;

public interface NoTransExceptThisYearRepository extends JpaRepository<NoTransExceptThisYear, String>{
	
	/*
	SELECT 
	  TO_CHAR(TO_DATE(H1.TRANS_DT, 'YYYY'), 'YYYY') AS YEAR
	  , C.ACCT_NO AS ACCT_NO
	  , C.NAME AS NAME
	FROM CUSTOMER_TRANSACTION_HISTORY H1
	,CUSTOMER C
	WHERE H1.TRANS_DT NOT LIKE '2020%'
	AND H1.CANCEL_YN = 'N'
	GROUP BY TO_CHAR(TO_DATE(H1.TRANS_DT, 'YYYY'), 'YYYY'), C.ACCT_NO
	
	MINUS
	
	SELECT 
	  TO_CHAR(TO_DATE(H1.TRANS_DT, 'YYYY'), 'YYYY') AS YEAR
	  , H1.ACCT_NO AS ACCT_NO
	  , C.NAME AS NAME
	FROM CUSTOMER_TRANSACTION_HISTORY H1
	INNER JOIN CUSTOMER C 
	ON H1.ACCT_NO = C.ACCT_NO
	WHERE H1.TRANS_DT NOT LIKE '2020%'
	AND H1.CANCEL_YN = 'N'
	GROUP BY TO_CHAR(TO_DATE(H1.TRANS_DT, 'YYYY'), 'YYYY'), H1.ACCT_NO
	*/
	
	@Query(value="SELECT TO_CHAR(TO_DATE(H1.TRANS_DT, 'YYYY'), 'YYYY') AS YEAR, C.ACCT_NO AS ACCT_NO, C.NAME AS NAME FROM CUSTOMER_TRANSACTION_HISTORY H1,CUSTOMER C WHERE H1.TRANS_DT NOT LIKE '2020%' AND H1.CANCEL_YN = 'N' GROUP BY TO_CHAR(TO_DATE(H1.TRANS_DT, 'YYYY'), 'YYYY'), C.ACCT_NO MINUS SELECT TO_CHAR(TO_DATE(H1.TRANS_DT, 'YYYY'), 'YYYY') AS YEAR, H1.ACCT_NO AS ACCT_NO, C.NAME AS NAME FROM CUSTOMER_TRANSACTION_HISTORY H1 INNER JOIN CUSTOMER C ON H1.ACCT_NO = C.ACCT_NO WHERE H1.TRANS_DT NOT LIKE '2020%' AND H1.CANCEL_YN = 'N' GROUP BY TO_CHAR(TO_DATE(H1.TRANS_DT, 'YYYY'), 'YYYY'), H1.ACCT_NO", nativeQuery=true)
	List<NoTransExceptThisYear> getNoTransExceptThisYear();

}
